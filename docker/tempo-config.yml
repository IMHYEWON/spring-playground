server:
  http_listen_port: 3200

distributor:
  # Tempo가 지원하는 데이터 수집 프로토콜(OTLP, OpenCensus 등)을 설정
  receivers:                           # this configuration will listen on all ports and protocols that tempo is capable of.
    otlp:
      protocols:
        http:
        grpc:
          endpoint: 0.0.0.0:4317

# Tempo가 데이터를 수집한 후 어떻게 처리할지 설정
ingester:
  # 데이터를 블록으로 분리하는 최대 시간 (프로덕션에서는 보통 1시간)
  max_block_duration: 5m               # cut the headblock when this much time passes. this is being set for demo purposes and should probably be left alone normally

compactor:
  compaction:
    # block 리텐션 시간 설정 (프로덕션에서는 보통 7일)
    block_retention: 1h                # overall Tempo trace retention. set for demo purposes

metrics_generator:
  registry:
    external_labels:
      source: tempo
      cluster: docker-compose
  storage:
    # 메트릭 데이터 임시 저장하는 경로
    path: /tmp/tempo/generator/wal
    remote_write:
      - url: http://prometheus:9090/api/v1/write
        send_exemplars: true

storage:
  trace:
    # 데이터를 저장할 백엔드 스토리지를 지정 --> local, s3, gcs, azure 등
    backend: local                     # backend configuration to use
    wal:
      path: /tmp/tempo/wal             # where to store the the wal locally
    local:
      path: /tmp/tempo/blocks

overrides:
  # 기능
  metrics_generator_processors: [service-graphs, span-metrics] # enables metrics generator