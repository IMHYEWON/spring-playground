services:
  connect:
    image: cnfldemos/kafka-connect-datagen:0.6.4-7.6.0
    hostname: connect
    container_name: connect
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: PLAINTEXT://broker:29092
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: localhost:8081
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
    labels:
      logging.promtail: "true"  # Promtail이 감지할 수 있도록 라벨 추가
#  ksqldb-server:
#    image: confluentinc/cp-ksqldb-server:7.8.0
#    hostname: ksqldb-server
#    container_name: ksqldb-server
#    depends_on:
#      - broker
#      - connect
#    ports:
#      - "8088:8088"
#    environment:
#      KSQL_CONFIG_DIR: "/etc/ksql"
#      KSQL_BOOTSTRAP_SERVERS: "broker:29092"
#      KSQL_HOST_NAME: ksqldb-server
#      KSQL_LISTENERS: "http://0.0.0.0:8088"
#      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
#      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
#      KSQL_KSQL_CONNECT_URL: "http://connect:8083"
#      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
#      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
#      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'

#  ksqldb-cli:
#    image: confluentinc/cp-ksqldb-cli:7.8.0
#    container_name: ksqldb-cli
#    depends_on:
#      - broker
#      - connect
#      - ksqldb-server
#    entrypoint: /bin/sh
#    tty: true
#
#  ksql-datagen:
#    image: confluentinc/ksqldb-examples:7.8.0
#    hostname: ksql-datagen
#    container_name: ksql-datagen
#    depends_on:
#      - ksqldb-server
#      - broker
#      - schema-registry
#      - connect
#    command: "bash -c 'echo Waiting for Kafka to be ready... && \
#                       cub kafka-ready -b broker:29092 1 40 && \
#                       echo Waiting for Confluent Schema Registry to be ready... && \
#                       cub sr-ready schema-registry 8081 40 && \
#                       echo Waiting a few seconds for topic creation to finish... && \
#                       sleep 11 && \
#                       tail -f /dev/null'"
#    environment:
#      KSQL_CONFIG_DIR: "/etc/ksql"
#      STREAMS_BOOTSTRAP_SERVERS: broker:29092
#      STREAMS_SCHEMA_REGISTRY_HOST: schema-registry
#      STREAMS_SCHEMA_REGISTRY_PORT: 8081
#
#  rest-proxy:
#    image: confluentinc/cp-kafka-rest:7.8.0
#    ports:
#      - 8082:8082
#    hostname: rest-proxy
#    container_name: rest-proxy
#    environment:
#      KAFKA_REST_HOST_NAME: rest-proxy
#      KAFKA_REST_BOOTSTRAP_SERVERS: 'broker:29092'
#      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
#      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
